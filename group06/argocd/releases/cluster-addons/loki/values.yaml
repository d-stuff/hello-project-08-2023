loki-stack:
  loki:
    enabled: true
    image:
      repository: 804444481013.dkr.ecr.eu-west-1.amazonaws.com/loki
      tag: 2.6.1
      pullPolicy: IfNotPresent
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      hosts:
        - host: loki.group07.hack22.tikalk.dev
          paths:
            - /
      tls:
        - hosts:
            - loki.group07.hack22.tikalk.dev
    config:
      auth_enabled: false
      ingester:
        wal:
          enabled: false
        chunk_idle_period: 3m
        chunk_block_size: 262144
        chunk_retain_period: 1m
        max_transfer_retries: 0
        lifecycler:
          ring:
            kvstore:
              store: inmemory
            replication_factor: 1
      limits_config:
        enforce_metric_name: false
        reject_old_samples: true
        reject_old_samples_max_age: 168h
      schema_config:
        configs:
          - from: 2020-10-24
            store: boltdb-shipper
            object_store: filesystem
            schema: v11
            index:
              prefix: index_
              period: 24h
      server:
        http_listen_port: 3100
      storage_config:
        boltdb_shipper:
          active_index_directory: /data/loki/boltdb-shipper-active
          cache_location: /data/loki/boltdb-shipper-cache
          cache_ttl: 24h         # Can be increased for faster performance over longer query periods, uses more disk space
          shared_store: filesystem
        filesystem:
          directory: /data/loki/chunks
      chunk_store_config:
        max_look_back_period: 0s
      table_manager:
        retention_deletes_enabled: false
        retention_period: 0s
      compactor:
        working_directory: /data/loki/boltdb-shipper-compactor
        shared_store: filesystem
    # Needed for Alerting: https://grafana.com/docs/loki/latest/alerting/
    # This is just a simple example, for more details: https://grafana.com/docs/loki/latest/configuration/#ruler_config
      ruler:
        storage:
          type: local
          local:
            directory: /rules
        rule_path: /tmp/scratch
        alertmanager_url: http://kube-prometheus-stack-alertmanager.kube-prometheus-stack:9093
        ring:
          kvstore:
            store: inmemory
        enable_api: true

    extraArgs: {}
    ## The app name of loki clients
    client: {}
    # name:
    nodeSelector:
      workload: system
    persistence:
      enabled: true
      accessModes:
        - ReadWriteOnce
      size: 50Gi
    priorityClassName: system-cluster-critical
    replicas: 1
    resources: {}
    # limits:
    #   cpu: 200m
    #   memory: 256Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    serviceMonitor:
      enabled: false
      interval: ""
      additionalLabels: {}
      annotations: {}
      # scrapeTimeout: 10s
    alerting_groups:
      - name: example
        rules:
        - alert: HighThroughputLogStreams
          expr: sum by(container) (rate({job=~"loki-dev/.*"}[1m])) > 1000
          for: 10m

  promtail:
    enabled: true
    image:
      registry: 804444481013.dkr.ecr.eu-west-1.amazonaws.com
      repository: promtail
      tag: 2.6.1
      pullPolicy: IfNotPresent
    nameOverride: promtail
    loki:
      serviceName: ""  # Defaults to "${RELEASE}-loki" if not set
      servicePort: 3100
      serviceScheme: http
      # user: user
      # password: pass
    pipelineStages:
      - docker: {}
    resources: {}
    #  limits:
    #    cpu: 200m
    #    memory: 128Mi
    #  requests:
    #    cpu: 100m
    #    memory: 128Mi

    scrapeConfigs: []
    extraScrapeConfigs: []

    tolerations:
      - operator: Exists

    volumes:
      - name: docker
        hostPath:
          path: /var/lib/docker/containers
      - name: pods
        hostPath:
          path: /var/log/pods

    extraVolumes: []

    volumeMounts:
      - name: docker
        mountPath: /var/lib/docker/containers
        readOnly: true
      - name: pods
        mountPath: /var/log/pods
        readOnly: true

    extraVolumeMounts: []

    # Add extra Commandline args while starting up promtail.
    # more info : https://github.com/grafana/loki/pull/1530

    extraCommandlineArgs: []
    # example:
    # extraCommandlineArgs:
    #   - -client.external-labels=hostname=$(HOSTNAME)

    config:
      client:
        # Maximum wait period before sending batch
        batchwait: 1s
        # Maximum batch size to accrue before sending, unit is byte
        batchsize: 1048576

        # Maximum time to wait for server to respond to a request
        timeout: 10s

        backoff_config:
          # Initial backoff time between retries
          min_period: 500ms
          # Maximum backoff time between retries
          max_period: 5m
          # Maximum number of retries when sending batches, 0 means infinite retries
          max_retries: 10

        # The labels to add to any time series or alerts when communicating with loki
        external_labels: {}

      server:
        http_listen_port: 3101

      positions:
        filename: /run/promtail/positions.yaml
      target_config:
        # Period to resync directories being watched and files being tailed
        sync_period: 10s

    serviceMonitor:
      enabled: false
      interval: ""
      additionalLabels: {}
      annotations: {}
      # scrapeTimeout: 10s

    # Extra env variables to pass to the promtail container
    env: []
